[
{
	"uri": "http://localhost:1313/log/vi/2-setup-requirements/1-configure-slack-webhooks/",
	"title": " C·∫•u h√¨nh Web-hooks Slack",
	"tags": [],
	"description": "",
	"content": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng WEB-HOOKS tr√™n SLACK ƒê·∫ßu ti√™n, h√£y ƒëƒÉng nh·∫≠p v√†o Slack.com th√¥ng qua tr√¨nh duy·ªát c·ªßa b·∫°n. ƒê√¢y l√† giao di·ªán ch√≠nh c·ªßa Slack sau khi ch√∫ng ta ƒë√£ ƒëƒÉng nh·∫≠p th√†nh c√¥ng. Ti·∫øp theo, ch√∫ng ta truy c·∫≠p v√†o Incoming WebHooks v√† ch·ªçn Add to Slack. Khi b·∫•m v√†o, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu Create Another Workspace. H√£y nh·∫•n v√†o n√≥.\nƒê√¢y l√† giao di·ªán ƒë∆∞·ª£c hi·ªán l√™n sau khi b·∫°n nh·∫•n v√†o Create Another Workspace. Nh·∫≠p t√™n l√† aws-lambda-labs v√† sau ƒë√≥ ch·ªçn Following.\nTi·∫øp theo h·∫≠p t√™n c·∫£u b·∫°n sao ƒë√≥ b·∫•m Following B·ªè qua b∆∞·ªõc n√†y n·∫øu b·∫°n ch·ªâ l√†m 1 m√¨nh Ho√†n t·∫•t "
},
{
	"uri": "http://localhost:1313/log/vi/5-create-lambda-function/1-function-stop-instance/",
	"title": " Function to Stop Instances",
	"tags": [],
	"description": "",
	"content": "T·∫°o Lambda Function th·ª±c hi·ªán ch·ª©c nƒÉng Stop instances Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m Lambda Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn Lambda T·∫°i Functions trong Lambda Ch·ªçn Create function Trong giao di·ªán Create function Ch·ªçn Author from scratch ·ªû Function name ƒë·∫∑t dc-common-lambda-auto-stop Trong ph·∫ßn Runtime ch·ªçn Python 3.13 C√≤n l·∫°i Architecture h√£y ch·ªçn x86_64 Ti·∫øp t·ª•c ·ªü giao di·ªán Create function Ch·ªçn Change default execution role ·ªû Execution role ch·ªçn Use an existing role ·ªû Existing role ch·ªçn IAM role v·ª´a t·∫°o Ho√†n th√†nh Create function Sau khi t·∫°o th√†nh c√¥ng function Ch·ªçn Configuration T·∫°i thanh b√™n tr√°i, ch·ªçn Environment variables Ch·ªçn Edit Trong giao di·ªán Edit environment variables Ch·ªçn Add environment variable T·∫°i giao di·ªán Edit environment variables ·ªû Key nh·∫≠p environment_auto ·ªû Value nh·∫≠p true Ch·ªçn Save ƒë·ªÉ ho√†n t·∫•t Sau khi t·∫°o th√†nh c√¥ng ta ƒë·∫øn v·ªõi code Trong giao di·ªán Code source Import source code: C·∫ßn ph·∫£i thay ƒë·ªïi webhook_url ƒë·ªÉ nh·∫≠n th√¥ng b√°o ƒë·∫øn Slack. import boto3 import os import json import urllib3 from datetime import datetime, timedelta, timezone ec2_resource = boto3.resource(\u0026#39;ec2\u0026#39;) http = urllib3.PoolManager() webhook_url = \u0026#34;https://hooks.slack.com/services/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\u0026#34; ACTION_VERB = { \u0026#34;start\u0026#34;: \u0026#34;Started\u0026#34;, \u0026#34;stop\u0026#34;: \u0026#34;Stopped\u0026#34; } def lambda_handler(event, context): environment_auto = os.environ.get(\u0026#39;environment_auto\u0026#39;) action = event.get(\u0026#39;action\u0026#39;, \u0026#39;\u0026#39;).lower() print(f\u0026#34;[DEBUG] environment_auto = {environment_auto}\u0026#34;) print(f\u0026#34;[DEBUG] action = {action}\u0026#34;) if not environment_auto: return { \u0026#34;statusCode\u0026#34;: 400, \u0026#34;body\u0026#34;: \u0026#34;Missing environment_auto\u0026#34; } if action not in [\u0026#39;start\u0026#39;, \u0026#39;stop\u0026#39;]: return { \u0026#34;statusCode\u0026#34;: 400, \u0026#34;body\u0026#34;: \u0026#34;Invalid action. Must be \u0026#39;start\u0026#39; or \u0026#39;stop\u0026#39;.\u0026#34; } instances = ec2_resource.instances.filter( Filters=[{\u0026#39;Name\u0026#39;: \u0026#39;tag:environment_auto\u0026#39;, \u0026#39;Values\u0026#39;: [environment_auto]}] ) instance_list = list(instances) print(f\u0026#34;[DEBUG] Instances found: {instance_list}\u0026#34;) if not instance_list: print(f\u0026#34;[INFO] No EC2 instances found for action \u0026#39;{action}\u0026#39;\u0026#34;) return { \u0026#34;statusCode\u0026#34;: 404, \u0026#34;body\u0026#34;: \u0026#34;No EC2 instances found\u0026#34; } action_results = [] for instance in instance_list: if action == \u0026#39;start\u0026#39;: result = instance.start() else: result = instance.stop() action_results.append(result) sent_slack(action, action_results) return { \u0026#34;statusCode\u0026#34;: 200, \u0026#34;body\u0026#34;: f\u0026#34;{ACTION_VERB[action]} {len(instance_list)} EC2 instance(s)\u0026#34; } def sent_slack(action, action_results): instance_ids = [] key = \u0026#34;StartingInstances\u0026#34; if action == \u0026#34;start\u0026#34; else \u0026#34;StoppingInstances\u0026#34; for result in action_results: if key in result and len(result[key]) \u0026gt; 0: for i in result[key]: instance_ids.append(i[\u0026#34;InstanceId\u0026#34;]) if instance_ids: now = datetime.now(timezone.utc) + timedelta(hours=7) current_time = now.strftime(\u0026#34;%H:%M:%S %d-%m-%Y\u0026#34;) instance_list_str = \u0026#34;\\n‚Ä¢ \u0026#34; + \u0026#34;\\n‚Ä¢ \u0026#34;.join(instance_ids) msg = ( f\u0026#34;{\u0026#39;‚úÖ Started\u0026#39; if action == \u0026#39;start\u0026#39; else \u0026#39;‚õî Stopped\u0026#39;} EC2 Instances:\\n\u0026#34; f\u0026#34;{instance_list_str}\\n\u0026#34; f\u0026#34;üïí Time: {current_time} (Asia/Ho_Chi_Minh)\u0026#34; ) data = {\u0026#34;text\u0026#34;: msg} r = http.request(\u0026#34;POST\u0026#34;, webhook_url, body=json.dumps(data), headers={\u0026#34;Content-Type\u0026#34;: \u0026#34;application/json\u0026#34;}) print(f\u0026#34;[DEBUG] Slack response status: {r.status}\u0026#34;) else: print(f\u0026#34;[INFO] No instances {ACTION_VERB[action]}\u0026#34;) Sau khi ƒë√£ th√™m ƒë∆∞·ªùng d·∫´n ta nh·∫•n Deploy Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m Amazon EvenBridge Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn Amazon EvenBridgetch Trong giao di·ªán Rules Ch·ªçn Create rule ·ªû ph·∫ßn Define rule detail trong giao di·ªán create rule ·ªû Name nh·∫≠p dc-common-lambda-auto-stop ·ªû Description nh·∫≠p dc-common-lambda-auto-stop Ch·ªçn Schedule Ch·ªçn Countinue to create rule ·ªû ph·∫ßn Schedule pattern ·ªû Occurrence ch·ªçn Recurring schedule ·ªû Time zone ch·ªçn (UTC+07:00) Asia/Saigon \u0026ldquo;B·∫°n mu·ªën EventBridge Rule d·ª´ng 17 gi·ªù m·ªói ng√†y t·ª´ th·ª© Hai ƒë·∫øn th·ª© S√°u (tr·ª´ th·ª© 7 v√† Ch·ªß nh·∫≠t) theo gi·ªù Vi·ªát Nam (ICT, UTC+7). Tr√™n AWS EventBridge, cron d√πng UTC, n√™n ph·∫£i tr·ª´ 7 ti·∫øng\u0026rdquo; ·ªû Schedule type ch·ªçn Cron-based schedule Trong ph·∫ßn Cron expression Tr∆∞·ªùng Gi√° tr·ªã √ù nghƒ©a Minutes 0 V√†o ph√∫t 00 Hours 10 10 gi·ªù UTC (t·ª©c 17 gi·ªù VN) Day of month ? B·ªè qua ng√†y trong th√°ng Month * M·ªói th√°ng Day of week 2-6 T·ª´ th·ª© 2 ƒë·∫øn th·ª© 6 Year * M·ªói nƒÉm Sau ƒë√≥ h√£y b·∫•m Next ·ªû ph·∫ßn Select target(s) Ch·ªçn AWS service ·ªû Select a target ch·ªçn Lambda function ·ªû Function ch·ªçn dc-common-lamda-auto-stop ·ªû Execution role t√≠ch v√†o Use existing role r·ªìi ch·ªçn dc-common-lamda-role B·∫•m Next Ki·ªÉm tra l·∫°i v√† ho√†n th√†nh, ch·ªçn Create rule ƒê√£ t·∫°o th√†nh c√¥ng rule cho stop insatance "
},
{
	"uri": "http://localhost:1313/log/vi/1-introduction/",
	"title": " GI·ªöI THI·ªÜU",
	"tags": [],
	"description": "",
	"content": "GI·ªöI THI·ªÜU Trong qu√° tr√¨nh s·ª≠ d·ª•ng h·∫° t·∫ßng ƒë√°m m√¢y AWS, nhi·ªÅu doanh nghi·ªáp th∆∞·ªùng g·∫∑p t√¨nh tr·∫°ng l√£ng ph√≠ t√†i nguy√™n, ƒë·∫∑c bi·ªát l√† c√°c EC2 instance ch·∫°y li√™n t·ª•c m√† kh√¥ng th·ª±c s·ª± c·∫ßn thi·∫øt. Vi·ªác kh√¥ng gi√°m s√°t v√† t·ªëi ∆∞u nh·ªØng instance n√†y c√≥ th·ªÉ d·∫´n ƒë·∫øn chi ph√≠ v·∫≠n h√†nh tƒÉng cao m·ªôt c√°ch kh√¥ng ki·ªÉm so√°t.\nM·ª•c ti√™u Workshop Workshop ‚ÄúOptimize EC2 Cost with Lambda‚Äù ƒë∆∞·ª£c x√¢y d·ª±ng nh·∫±m gi√∫p ng∆∞·ªùi d√πng:\nT·ª± ƒë·ªông h√≥a vi·ªác b·∫≠t/t·∫Øt EC2 instance d·ª±a tr√™n l·ªãch tr√¨nh ho·∫∑c ƒëi·ªÅu ki·ªán nh·∫•t ƒë·ªãnh. S·ª≠ d·ª•ng AWS Lambda ƒë·ªÉ ƒëi·ªÅu khi·ªÉn EC2 m·ªôt c√°ch hi·ªáu qu·∫£ v√† kh√¥ng c·∫ßn qu·∫£n l√Ω h·∫° t·∫ßng (serverless). Gi·∫£m thi·ªÉu chi ph√≠ v·∫≠n h√†nh h·∫° t·∫ßng cloud b·∫±ng c√°c b∆∞·ªõc thi·∫øt l·∫≠p ƒë∆°n gi·∫£n v√† d·ªÖ t√°i s·ª≠ d·ª•ng. AWS Lambda l√† d·ªãch v·ª• ƒëi·ªán to√°n kh√¥ng m√°y ch·ªß (serverless), cho ph√©p b·∫°n ch·∫°y code m√† kh√¥ng c·∫ßn cung c·∫•p ho·∫∑c qu·∫£n l√Ω m√°y ch·ªß.\n"
},
{
	"uri": "http://localhost:1313/log/vi/",
	"title": " T·ªêI ∆ØU H√ìA CHI PH√ç V·ªöI LAMBDA",
	"tags": [],
	"description": "",
	"content": "T·ªêI ∆ØU H√ìA CHI PH√ç V·ªöI LAMBDA T·ªïng quan Trong m√¥i tr∆∞·ªùng s·ª≠ d·ª•ng AWS, Amazon EC2 l√† m·ªôt trong nh·ªØng d·ªãch v·ª• ph·ªï bi·∫øn v√† c≈©ng l√† ngu·ªìn chi ph√≠ l·ªõn n·∫øu kh√¥ng ƒë∆∞·ª£c qu·∫£n l√Ω hi·ªáu qu·∫£. Workshop ‚ÄúOptimize EC2 Cost with Lambda‚Äù ƒë∆∞·ª£c thi·∫øt k·∫ø nh·∫±m gi√∫p b·∫°n t·ª± ƒë·ªông h√≥a vi·ªác qu·∫£n l√Ω chi ph√≠ EC2 b·∫±ng c√°ch s·ª≠ d·ª•ng AWS Lambda ƒë·ªÉ t·∫Øt c√°c EC2 instance khi kh√¥ng c·∫ßn thi·∫øt ‚Äì v√≠ d·ª• ngo√†i gi·ªù h√†nh ch√≠nh.\nTh√¥ng qua workshop n√†y, b·∫°n s·∫Ω h·ªçc ƒë∆∞·ª£c c√°ch:\nG·∫Øn th·∫ª (tag) cho c√°c EC2 instance ƒë·ªÉ ph√¢n bi·ªát instance c·∫ßn t·ªëi ∆∞u. T·∫°o IAM Role ƒë·ªÉ Lambda c√≥ th·ªÉ ki·ªÉm so√°t EC2. Vi·∫øt h√†m Lambda b·∫≠t/t·∫Øt EC2 t·ª± ƒë·ªông theo l·ªãch tr√¨nh. Ki·ªÉm tra k·∫øt qu·∫£ v√† d·ªçn d·∫πp t√†i nguy√™n. M·ª•c ti√™u Gi√∫p ng∆∞·ªùi h·ªçc:\nN·∫Øm ƒë∆∞·ª£c c√°ch t√≠ch h·ª£p Lambda v·ªõi EC2. T·ªëi ∆∞u h√≥a chi ph√≠ s·ª≠ d·ª•ng EC2. TƒÉng t√≠nh t·ª± ƒë·ªông h√≥a trong v·∫≠n h√†nh h·∫° t·∫ßng cloud. ƒêi·ªÅu ki·ªán c·∫ßn ƒê·ªÉ th·ª±c hi·ªán workshop n√†y, b·∫°n c·∫ßn c√≥:\nT√†i kho·∫£n AWS c√≥ quy·ªÅn qu·∫£n tr·ªã (AdministratorAccess). Ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ EC2, IAM v√† Lambda. Tr√¨nh duy·ªát web v√† k·∫øt n·ªëi Internet ·ªïn ƒë·ªãnh. N·ªôi dung ch√≠nh Gi·ªõi thi·ªáu C√°c b∆∞·ªõc chu·∫©n b·ªã T·∫°o tag cho instance T·∫°o IAM role cho Lambda T·∫°o Lambda Function Ki·ªÉm tra k·∫øt qu·∫£ D·ªçn d·∫πp t√†i nguy√™n "
},
{
	"uri": "http://localhost:1313/log/vi/2-setup-requirements/",
	"title": " C√ÅC B∆Ø·ªöC CHU·∫®N B·ªä",
	"tags": [],
	"description": "",
	"content": " C·∫•u h√¨nh Slack Webhooks T·∫°o VPC T·∫°o Security Group T·∫°o EC2 Instance "
},
{
	"uri": "http://localhost:1313/log/vi/5-create-lambda-function/2-function-start-instance/",
	"title": " Function to Start Instances",
	"tags": [],
	"description": "",
	"content": "T·∫°o Lambda Function th·ª±c hi·ªán ch·ª©c nƒÉng Start instances Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m Lambda Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn Lambda T·∫°i Functions trong Lambda Ch·ªçn Create function Trong giao di·ªán Create function Ch·ªçn Author from scratch ·ªû Function name ƒë·∫∑t dc-common-lambda-auto-start Trong ph·∫ßn Runtime ch·ªçn Python 3.13 C√≤n l·∫°i Architecture h√£y ch·ªçn x86_64 Ti·∫øp t·ª•c ·ªü giao di·ªán Create function Ch·ªçn Change default execution role ·ªû Execution role ch·ªçn Use an existing role ·ªû Existing role ch·ªçn IAM role v·ª´a t·∫°o Ho√†n th√†nh Create function Sau khi t·∫°o th√†nh c√¥ng function Ch·ªçn Configuration T·∫°i thanh b√™n tr√°i, ch·ªçn Environment variables Ch·ªçn Edit T·∫°i giao di·ªán Edit environment variables ·ªû Key nh·∫≠p environment_auto ·ªû Value nh·∫≠p true Ch·ªçn Save ƒë·ªÉ ho√†n t·∫•t Sau khi t·∫°o th√†nh c√¥ng ta ƒë·∫øn v·ªõi code Trong giao di·ªán Code source Import source code: C·∫ßn ph·∫£i thay ƒë·ªïi webhook_url ƒë·ªÉ nh·∫≠n th√¥ng b√°o ƒë·∫øn Slack. import boto3 import os import json import urllib3 from datetime import datetime, timedelta, timezone ec2_resource = boto3.resource(\u0026#39;ec2\u0026#39;) http = urllib3.PoolManager() webhook_url = \u0026#34;https://hooks.slack.com/services/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\u0026#34; def lambda_handler(event, context): # L·∫•y bi·∫øn m√¥i tr∆∞·ªùng v√† action t·ª´ input environment_auto = os.environ.get(\u0026#39;environment_auto\u0026#39;) action = event.get(\u0026#34;action\u0026#34;, \u0026#34;\u0026#34;).lower() print(f\u0026#34;[DEBUG] environment_auto = {environment_auto}\u0026#34;) print(f\u0026#34;[DEBUG] action = {action}\u0026#34;) if not environment_auto or action not in [\u0026#34;start\u0026#34;, \u0026#34;stop\u0026#34;]: return { \u0026#34;statusCode\u0026#34;: 400, \u0026#34;body\u0026#34;: \u0026#34;Missing environment_auto or invalid action\u0026#34; } # L·ªçc EC2 theo tag instances = ec2_resource.instances.filter( Filters=[{\u0026#39;Name\u0026#39;: \u0026#39;tag:environment_auto\u0026#39;, \u0026#39;Values\u0026#39;: [environment_auto]}] ) instance_list = list(instances) print(f\u0026#34;[DEBUG] Instances found: {instance_list}\u0026#34;) if not instance_list: return { \u0026#34;statusCode\u0026#34;: 404, \u0026#34;body\u0026#34;: \u0026#34;No EC2 instances found\u0026#34; } action_result = [] for instance in instance_list: if action == \u0026#34;start\u0026#34;: result = instance.start() else: result = instance.stop() action_result.append(result) sent_slack(action_result, action) return { \u0026#34;statusCode\u0026#34;: 200, \u0026#34;body\u0026#34;: f\u0026#34;{action.capitalize()}ed {len(instance_list)} EC2 instance(s)\u0026#34; } def sent_slack(action_result, action): instance_ids = [] key = \u0026#34;StartingInstances\u0026#34; if action == \u0026#34;start\u0026#34; else \u0026#34;StoppingInstances\u0026#34; for result in action_result: if key in result and len(result[key]) \u0026gt; 0: for i in result[key]: instance_ids.append(i[\u0026#34;InstanceId\u0026#34;]) if instance_ids: # L·∫•y th·ªùi gian hi·ªán t·∫°i theo UTC+7 (gi·ªù VN) now = datetime.now(timezone.utc) + timedelta(hours=7) current_time = now.strftime(\u0026#34;%H:%M:%S %d-%m-%Y\u0026#34;) msg = f\u0026#34;{\u0026#39;‚úÖ Starting\u0026#39; if action == \u0026#39;start\u0026#39; else \u0026#39;‚õî Stopping\u0026#39;} Instances ID:\\n{instance_ids}\\nüïí Time: {current_time} (Asia/Ho_Chi_Minh)\u0026#34; data = {\u0026#34;text\u0026#34;: msg} r = http.request(\u0026#34;POST\u0026#34;, webhook_url, body=json.dumps(data), headers={\u0026#34;Content-Type\u0026#34;: \u0026#34;application/json\u0026#34;}) print(f\u0026#34;[DEBUG] Slack response status: {r.status}\u0026#34;) else: print(f\u0026#34;[INFO] No instances {action}ed\u0026#34;) Sau khi ƒë√£ th√™m ƒë∆∞·ªùng d·∫´n ta nh·∫•n Deploy Truy c·∫≠p v√†o Amazon EventBridge Ch·ªçn Rules Ch·ªçn v√†o Create rule ·ªû ph·∫ßn Define rule detail trong giao di·ªán create rule ·ªû Name nh·∫≠p dc-common-lambda-auto-start ·ªû Description nh·∫≠p dc-common-lambda-auto-start Ch·ªçn Schedule Ch·ªçn Countinue to create rule ·ªû ph·∫ßn Schedule pattern ·ªû Occurrence ch·ªçn Recurring schedule ·ªû Time zone ch·ªçn (UTC+07:00) Asia/Saigon \u0026ldquo;B·∫°n mu·ªën EventBridge Rule b·∫≠t l√∫c 9 gi·ªù m·ªói ng√†y t·ª´ th·ª© Hai ƒë·∫øn th·ª© S√°u (tr·ª´ th·ª© 7 v√† Ch·ªß nh·∫≠t) theo gi·ªù Vi·ªát Nam (ICT, UTC+7). Tr√™n AWS EventBridge, cron d√πng UTC, n√™n ph·∫£i tr·ª´ 7 ti·∫øng\u0026rdquo; ·ªû Schedule type ch·ªçn Cron-based schedule Trong ph·∫ßn Cron expression Tr∆∞·ªùng Gi√° tr·ªã √ù nghƒ©a Minutes 0 V√†o ph√∫t 00 Hours 2 2 gi·ªù UTC (t·ª©c 9 gi·ªù VN) Day of month ? B·ªè qua ng√†y trong th√°ng Month * M·ªói th√°ng Day of week 2-6 T·ª´ th·ª© 2 ƒë·∫øn th·ª© 6 Year * M·ªói nƒÉm Sau ƒë√≥ h√£y b·∫•m Next ·ªû ph·∫ßn Select target(s) Ch·ªçn AWS service ·ªû Select a target ch·ªçn Lambda function ·ªû Function ch·ªçn dc-common-lamda-auto-stop ·ªû Execution role t√≠ch v√†o Use existing role r·ªìi ch·ªçn dc-common-lamda-role B·∫•m Next Ki·ªÉm tra l·∫°i v√† ho√†n th√†nh, ch·ªçn Create rule ƒê√£ t·∫°o th√†nh c√¥ng rule cho start insatance "
},
{
	"uri": "http://localhost:1313/log/vi/2-setup-requirements/2-create-vpc/",
	"title": " T·∫°o VPC",
	"tags": [],
	"description": "",
	"content": "H∆∞·ªõng d·∫´n t·∫°o VPC Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m VPC Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn VPC Trong giao di·ªán VPC ƒê·∫ßu ti√™n h√£y ch·ªçn Your VPCs B·∫•m v√†o Create VPC Trong giao di·ªán Create VPC Ch·ªçn VPC and more Nh·∫≠p v√†o lambda-lab K√©o xu·ªëng d∆∞·ªõi c√πng v√†o nh·∫•n v√†o Create VPC Ch·ªçn v√†o View VPC ƒê√£ t·∫°o th√†nh c√¥ng VPC Ti·∫øp theo trong giao di·ªán VPC Ch·ªçn Subnets Ch·ªçn v√†o public subnet Ch·ªçn Actions Cu·ªëi c√πng b·∫•m v√†o Edit subnet settings B·∫•m ch·ªçn v√†o Enable auto-asign public IPv4 address, r·ªìi ch·ªçn v√†o Save ƒê√£ b·∫≠t th√†nh c√¥ng "
},
{
	"uri": "http://localhost:1313/log/vi/2-setup-requirements/3-create-security-gruop/",
	"title": " T·∫°o Security Group",
	"tags": [],
	"description": "",
	"content": "H∆∞·ªõng d·∫´n t·∫°o Security Gruop Trong giao di·ªán VPC Ch·ªçn v√†o Security Group Sau ƒë√≥ ch·ªçn Create security gruop Trong Create security group Nh·∫≠p lambda-lab v√†o Security gruop name Nh·∫≠p security group for lambda lab v√†o Description Trong √¥ VPC ch·ªçn VPC v·ª´a m·ªõi t·∫°o Ti·∫øp t·ª•c ƒë·∫øn ph·∫ßn Inbound rules Ch·ªçn v√†o Add rule C·∫•u h√¨nh Inbound rules v√† Outbound rules B·∫•m v√†o Create security group "
},
{
	"uri": "http://localhost:1313/log/vi/3-tag-for-instances/",
	"title": " T·∫†O TAG CHO INSTANCE",
	"tags": [],
	"description": "",
	"content": "T·∫°o Tag cho Instance Trong giao di·ªán EC2 Ch·ªçn Instances Ch·ªçn lambda-lab-instance Ch·ªçn Actions Ch·ªçn Instance settings Ch·ªçn Manage tags Trong giao di·ªán Manage tags Ch·ªçn v√†o Add new tag Khi giao di·ªán Add new tag xu·∫•t hi·ªán T·∫°i Key, nh·∫≠p environment_auto T·∫°i Value, nh·∫≠p true Ch·ªçn Save Th√¥ng b√°o th√†nh c√¥ng "
},
{
	"uri": "http://localhost:1313/log/vi/2-setup-requirements/4-create-ec2-instance/",
	"title": " T·∫°o EC2 Instace",
	"tags": [],
	"description": "",
	"content": "H∆∞·ªõng d·∫´n t·∫°o EC2 Instace Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m EC2 Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn EC2 Trong giao di·ªán EC2 Ch·ªçn Instaces Ch·ªçn ti·∫øp Launch Instance Trong giao di·ªán c·ªßa Launch Instance Trong m·ª•c Name nh·∫≠p lambda-lab-instance Ch·ªçn Amazon Linux Ch·ªçn Amazon Linux 2023 kernel-6.12 AMI ·ªû m·ª•c Instance type Ch·ªçn t2.micro Ti·∫øp theo ·ªü Key pair Ch·ªçn Create new key pair Trong giao di·ªán Create key pair Key pair name nh·∫≠p v√†o lambda-lab-key ch·ªçn Create key pair Trong ph·∫ßn Network settings ch·ªçn Edit T·∫°i Edit c·ªßa Network settings Ch·ªçn VPC v·ª´a ƒë∆∞·ª£c t·∫°o Ch·ªçn public-subnet v·ª´a t·∫°o ·ªû Auto-assign public IP ch·ªçn Enable Ti·∫øp theo Select existing security group Ch·ªçn Security group v·ª´a t·∫°o Khi ƒë√£ xong, ch·ªçn Launch instance ƒê√£ t·∫°o EC2 instance th√†nh c√¥ng Note: Sau khi t·∫°o EC2 instance, c·∫ßn ƒë·ª£i v√†i ph√∫t ƒë·ªÉ instance chuy·ªÉn sang tr·∫°ng th√°i running v√† c√°c d·ªãch v·ª• b√™n trong kh·ªüi ch·∫°y ho√†n t·∫•t. L√∫c ƒë√≥ m·ªõi c√≥ th·ªÉ SSH ho·∫∑c truy c·∫≠p web server (n·∫øu c√≥).\n"
},
{
	"uri": "http://localhost:1313/log/vi/4-create-iam-role-for-lambda/",
	"title": " T·∫†O IAM ROLE CHO LAMBDA",
	"tags": [],
	"description": "",
	"content": "T·∫°o IAM Role cho Lambda Truy c·∫≠p v√†o AWS Management Consle Nh·∫≠p v√†o t√¨m IAM Sau ƒë√≥ h√£y b·∫•m v√†o ch·ªçn IAM T·∫°i giao di·ªán IAM Nh·∫•n v√†o Roles ·ªû t·∫°i giao di·ªán Roles nh·∫•n v√†o Create role ·ªû giao di·ªán Select trusted entity T·∫°i Trusted entity type ch·ªçn AWS service T·∫°i Use case ch·ªçn Lambda Ch·ªçn Next Ti·∫øp theo, ·ªü giao di·ªán Add permissions T√¨m CloudWatchFullAccess Ch·ªçn CloudWatchFullAccess Ti·∫øp t·ª•c th·ª±c hi·ªán theo b∆∞·ªõc 4 T√¨m CloudWatchFullAccess Ch·ªçn CloudWatchFullAccess Cu·ªëi c√πng, h√£y ch·ªçn Next T·∫°i giao di·ªán ti·∫øp theo Name, review, and create Nh·∫≠p dc-common-lambda-role cho Role name Nh√¨n ph√≠a d∆∞·ªõi s·∫Ω th·∫•y Step 2: Add permissions Ki·ªÉm tra Policy name t·∫°i Permissions policy summary Sau khi ƒë√£ ki·ªÉm tra xong th√¨ ch·ªçn Create role Role cho Lamda Function ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng "
},
{
	"uri": "http://localhost:1313/log/vi/5-create-lambda-function/",
	"title": " T·∫†O LAMBDA FUNCTION",
	"tags": [],
	"description": "",
	"content": "T·∫°o Lambda Function Ti·∫øp theo, ch√∫ng ta s·∫Ω th·ª±c h√†nh t·∫°o hai Lambda Function ‚Äì b∆∞·ªõc quan tr·ªçng trong qu√° tr√¨nh tri·ªÉn khai h·ªá th·ªëng.\nT·∫°o Lambda Function th·ª±c hi·ªán ch·ª©c nƒÉng Stop instances T·∫°o Lambda Function th·ª±c hi·ªán ch·ª©c nƒÉng Start instances "
},
{
	"uri": "http://localhost:1313/log/vi/6-verify-results/",
	"title": " KI·ªÇM TRA K·∫æT QU·∫¢",
	"tags": [],
	"description": "",
	"content": "Ki·ªÉm tra k·∫øt qu·∫£ Stop Ki·ªÉm tra giao di·ªán EC2 v√† tr·∫°ng th√°i instance V√†o ch·ª©c nƒÉng Lambda Function v√† th·ª±c hi·ªán ch·ª©c nƒÉng stop instance Ch·ªçn Test Ch·ªçn Create new event ·ªû d√≤ng Event name nh·∫≠p instance-stop ·ªû ph·∫ßn Event JSON nh·∫≠p v√†o {\r\u0026#34;action\u0026#34;: \u0026#34;stop\u0026#34;\r} Ch·ªçn Save Ch·ªçn Test Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng Ki·ªÉm tra trong workspace c·ªßa Slack ƒë√£ nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o Stopped instance Ki·ªÉm tra l·∫°i trang th√°i instance ·ªü giao di·ªán EC2 Ki·ªÉm tra k·∫øt qu·∫£ Start T∆∞∆°ng t·ª±, truy c·∫≠p v√†o Lambda Function v√† th·ª±c hi·ªán ch·ª©c nƒÉng start instance Ch·ªçn Test Ch·ªçn Create new event ·ªû d√≤ng Event name nh·∫≠p instance-start ·ªû ph·∫ßn Event JSON nh·∫≠p v√†o {\r\u0026#34;action\u0026#34;: \u0026#34;start\u0026#34;\r} Ch·ªçn Save Ch·ªçn Test Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng Ki·ªÉm tra trong workspace c·ªßa Slack ƒë√£ nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o Started instance Ki·ªÉm tra l·∫°i trang th√°i instance ·ªü giao di·ªán EC2 "
},
{
	"uri": "http://localhost:1313/log/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/log/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]